#!/bin/bash

# Verifica se o script está sendo executado como root
if [ "$EUID" -ne 0 ]; then
  echo "Por favor, execute como root."
  exit
fi

# Atualiza pacotes
apt update && apt upgrade -y

# Instala Docker se necessário
if ! [ -x "$(command -v docker)" ]; then
  echo "Instalando Docker..."
  apt install -y docker.io
fi

# Instala Docker Compose se necessário
if ! [ -x "$(command -v docker-compose)" ]; then
  echo "Instalando Docker Compose..."
  apt install -y docker-compose
fi

# Pergunta o nome de domínio para o Traefik
read -p "Digite o nome de domínio para acessar o StirlingPDF (ex: pdf.seudominio.com): " domain_name

# Cria o diretório para StirlingPDF
mkdir -p /opt/stirlingpdf

# Cria o arquivo docker-compose.yml para StirlingPDF com Traefik
cat <<EOL > /opt/stirlingpdf/docker-compose.yml
version: "3.8"

services:
  stirlingpdf:
    image: frooodle/s-pdf
    container_name: stirlingpdf
    ports:
      - "8080:8080"
    deploy:
      replicas: 1
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.stirlingpdf.rule=Host(\`${domain_name}\`)"
      - "traefik.http.services.stirlingpdf.loadbalancer.server.port=8080"
      - "traefik.http.routers.stirlingpdf.entrypoints=websecure"
      - "traefik.http.routers.stirlingpdf.tls=true"
      - "traefik.http.routers.stirlingpdf.tls.certresolver=myresolver"
    restart: unless-stopped
EOL

# Inicializa o Docker Swarm se ainda não estiver em execução
if ! docker info | grep -q "Swarm: active"; then
  echo "Inicializando o Docker Swarm..."
  docker swarm init
fi

# Cria a stack no Docker Swarm
docker stack deploy -c /opt/stirlingpdf/docker-compose.yml stirlingpdf

echo "StirlingPDF instalado e rodando no domínio $domain_name"
